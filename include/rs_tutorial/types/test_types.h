/*
 * This file was generated by generate_typesystem.py.
 * Filename:    test_types
 * Name:        test
 * Description: No description given
 * Version:     1.0
 * Vendor:      None
 */
#ifndef __TEST_TYPES_H__
#define __TEST_TYPES_H__

#include <robosherlock/feature_structure_proxy.h>
#include <rs_tutorial/types/type_definitions.h>
#include <robosherlock/types/core_types.h>

namespace rs_tutorial
{

/*
 * No description given
 */
class Centroid : public rs::FeatureStructureProxy
{
private:
  void initFields()
  {
    x.init(this, "x");
    y.init(this, "y");
    z.init(this, "z");
  }
public:
  // No description given
  rs::FeatureStructureEntry<float> x;
  // No description given
  rs::FeatureStructureEntry<float> y;
  // No description given
  rs::FeatureStructureEntry<float> z;

  Centroid(const Centroid &other) :
      rs::FeatureStructureProxy(other)
  {
    initFields();
  }

  Centroid(uima::FeatureStructure fs) :
      rs::FeatureStructureProxy(fs)
  {
    initFields();
  }
};

/*
 * Centorid of a cluster
 */
class MyFirstAnnotation : public rs::Annotation
{
private:
  void initFields()
  {
    centroid.init(this, "centroid");
    clusterId.init(this, "clusterId");
  }
public:
  // No description given
  rs::ComplexFeatureStructureEntry<Centroid> centroid;
  // No description given
  rs::FeatureStructureEntry<int> clusterId;

  MyFirstAnnotation(const MyFirstAnnotation &other) :
      rs::Annotation(other)
  {
    initFields();
  }

  MyFirstAnnotation(uima::FeatureStructure fs) :
      rs::Annotation(fs)
  {
    initFields();
  }
};

}

TYPE_TRAIT(rs_tutorial::Centroid, RS_TUTORIAL_TEST_CENTROID)
TYPE_TRAIT(rs_tutorial::MyFirstAnnotation, RS_TUTORIAL_TEST_MYFIRSTANNOTATION)

#endif /* __TEST_TYPES_H__ */
